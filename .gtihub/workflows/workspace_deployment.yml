name: workspace_CI

on:
  #Trigers the workflow on push or pull request events but only for the "main" branch
  push:
      branches: [ workspace_publish ]

  # Allows you to run this wokflow manually from the Action tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # You also can use the self-hosted runners.
    runs-on: windows-latest

    # Steps represent a sequence of task that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Synapse workspace deployment
        uses: Azure/Synapse-workspace-deployment@V1.9.0
        with:
          # Provide the Synapse workspace name where you want to deploy the artifacts.
          TargetWorkspaceName: 'sa-poc'
          # Specify the path to the workspace artifacts template.
          TemplateFile: './Workspace-dev/TemplateForWorkspace.json'
          # Specify the path to the template parameter file.
          ParametersFile: './Workspace-dev/TemplateParametersForWorkspace.json'
          # Provide the type of cloud environment. Valid values are: Azure Public, Azure China, Azure US Government, Azure Germany
          Environment: 'Azure Public'
          # Provide the resource group of the target Synapse workspace.
          resourceGroup: 'ps-test'
          # Provide client id of service principal.
          clientId: ${{secrets.CLIENTID}}
          # Provide client secret of the service principal.
          clientSecret: ${{secrets.CLIENTSECRET}}
          # Provide subscription id.
          subscriptionId: ${{secrets.SUBSCRIPTIONID}}
          # Provide tenant id.
          tenantId: ${{secrets.TENANTID}}
          # Delete the artifacts which are in the workspace but not in the template.
          DeleteArtifactsNotInTemplate: 'True'
          # Use managed identity to generate the bearer token?
          managedIdentity: 'False'
